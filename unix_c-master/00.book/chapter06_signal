第６章　为用户编程：终端控制和信号

有些程序处理从特定设备来的数据．这些与特定设备相关的程序
必须控制与设备的链接．Ｕｎｉｘ系统中最常见的设备是终端

终端驱动程序有很多设置．各个设置的特定值决定了终端驱动程序的模式．
为用户编写的程序通常需要设置终端驱动程序为特定的模式

键盘输入分为三类，终端驱动程序对这些输入做不同的处理．大多数键
代表常规数据，他们从驱动程序传输到程序，有些键调用驱动程序中的编辑
函数．如果按下删除键，驱动程序将前一个字符从他的行缓冲中删除，并将
命令发送到终端屏幕，使之从显示器中删除字符．最后，有些键调用处理
控制函数．Ｃｔｒｌ－Ｃ键告诉驱动程序调用内核中某个函数，这个函数给进程
发送一个信号．终端驱动程序支持若干种处理控制函数，他们都通过发送信号到
进程来实现控制

信号是从内核发送给进程的一种简短消息．信号可能来自用户，其他进程，或
内核本身．进程可以告诉内核，在他收到信号时需要做出怎样的响应

终端模式：
１　规范模式
    常见模式，驱动程序输入的字符保存在缓冲，接收到回车才发送到程序

２　非规范模式
    缓冲和编辑功能被关闭．stty -icanon

３　ｒａｗ模式
    每个处理步骤都被一个独立的位控制

由进程的某个操作产生的信号被称为同步信号 synchronous signals
由像用户击键这样的进程外的事件引起的信号被称为异步信号　asynchronous signals

进程如何处理信号：
１　接受默认处理
２  忽略信号
３  调用一个函数

大多数signal都可以被捕获或者忽略，但有两个无法被忽略，是SIGKILL SIGSTOP
